<Application   
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"             
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Probel.Geho.Gui.App"   
             >
    <Application.Resources>
        <LinearGradientBrush x:Key="MenuBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFCAD3E2" />
            <GradientStop Offset="0.3" Color="#FFC2CCDB" />
            <GradientStop Offset="1" Color="#FFADB9CD" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ToolBarTrayBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF9CAAC1" Offset="0" />
            <GradientStop Color="#FF9CAAC1" Offset="0.9" />
            <GradientStop Color="#FFA6B3CA" Offset="1" />
        </LinearGradientBrush>

        <!-- Button used in the toolboxes (typically the Ok, cancel) -->
        <Style TargetType="{x:Type Button}" x:Key="ButtonToolBoxStyle">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="75"/>
        </Style>


        <!-- Style for the footers of the toolboxes -->
        <Style TargetType="{x:Type Border}" x:Key="ToolBoxBorderStyle">
            <Setter Property="DockPanel.Dock" Value="Bottom"/>
            <Setter Property="Margin" Value="0,20,0,0"/>
            <Setter Property="BorderThickness" Value="0,0.5,0,0"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static SystemColors.ActiveBorderBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static SystemColors.ControlBrushKey}}"/>
        </Style>

        <!-- Styles for the HeaderedContent controls -->
        <Style TargetType="{x:Type HeaderedContentControl}">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <DockPanel LastChildFill="True">
                            <Border DockPanel.Dock="Top" Padding="4" Background="#465A7D" CornerRadius="3,3,0,0">
                                <ContentControl HorizontalAlignment="Center" Foreground="#CCFFFFFF" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                            </Border>

                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="0,0,2,2">
                                <ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type HeaderedContentControl}" x:Key="LightHeaderedContent">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="100"/>
            <Setter Property="Padding" Value="4" />
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontSize="17.333" Foreground="Black" FontWeight="Bold"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <DockPanel LastChildFill="True">
                            <Border DockPanel.Dock="Top" Padding="4" Background="#FFD6DBE9" CornerRadius="3,3,0,0">
                                <ContentControl HorizontalAlignment="Center" Foreground="Black" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                            </Border>

                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="0,0,2,2">
                                <ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Default style for buttons with a border and rounded corners -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True" 
                            CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Buttons for contextual edition (delete and edit button) -->
        <Style TargetType="{x:Type Button}" x:Key="EditionButtonStyle">
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Foreground" Value="{x:Null}" />
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>

        <!-- Buttons for contextual edition (delete and edit button) -->
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" x:Key="FixedButtonStyle">
            <Setter Property="Width" Value="70" />
        </Style>

        <!-- Buttons for contextual edition (delete and edit button) that supports text-->
        <Style TargetType="{x:Type Button}" x:Key="HeaderedEditionButtonStyle">
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>

        <!-- Status bar item style -->
        <Style TargetType="{x:Type StatusBarItem}">
            <Setter Property="Background" Value="#FF465A7D"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <!-- Style for the popups -->
        <Style TargetType="{x:Type Popup}">
            <Setter Property="Placement" Value="Bottom"/>
            <Setter Property="StaysOpen" Value="False"/>
            <Setter Property="AllowsTransparency" Value="True"/>
        </Style>

        <!-- TextBlock Style-->
        <Style TargetType="{x:Type TextBlock}" x:Key="TextBoxStyle">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>

        <!-- TextBox Style -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!-- TabItems style -->
        <SolidColorBrush x:Key="LightBlueBrush" Color="#FFD6DBE9"/>
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="YellowBrush" Color="#FFFFF29D" />
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="MinWidth" Value="100"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border Name="Border"
                                        Margin="0,0,-4,0" 
                                        Background="{StaticResource LightBlueBrush}"
                                        BorderBrush="{StaticResource  SolidBorderBrush}" 
                                        BorderThickness="1,1,1,1" 
                                        CornerRadius="2,12,0,0" >
                                    <ContentPresenter x:Name="ContentSite"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      ContentSource="Header"
                                                      Margin="12,2,12,2"
                                                      RecognizesAccessKey="True"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="100" />
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource YellowBrush}" />
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        <SolidColorBrush Color="#003399" x:Key="TaskDialogMainInstructionBrush" PresentationOptions:Freeze="True" />
    </Application.Resources>
</Application>
